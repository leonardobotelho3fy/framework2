{"ast":null,"code":"var _jsxFileName = \"/var/www/html/project/framework/src/components/Todos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todos = () => {\n  _s();\n\n  // Iniciando estado com array vazio.\n  const [data, setData] = useState([]);\n  const [show, setShow] = useState(false); // Sempre que o componente carregar, executar a função dentro do useEffect.\n\n  useEffect(() => {\n    async function getTodos() {\n      // Montando requisição\n      const response = await fetch('https://jsonplaceholder.typicode.com/todos').then(response => response.json()); // Setando o estado data com os valores retornados pela requisição\n\n      setData(response);\n    } // Chamando função.\n\n\n    getTodos();\n  }, []);\n\n  const toggleSwitch = key => {\n    /*#__PURE__*/\n    _jsxDEV(Alert, {\n      variant: 'warning',\n      onClose: () => setShow(false),\n      dismissible: true,\n      children: \"> Voc\\xEA n\\xE3o pode alterar isso ainda.\"\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Titulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.completed === false ? /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"custom-switch\",\n              checked: false,\n              onChange: () => toggleSwitch()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"custom-switch\",\n              checked: true,\n              onChange: () => toggleSwitch(key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todos, \"8STm9m2lF8GXW8M4bh3T9sgq8LU=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/var/www/html/project/framework/src/components/Todos.jsx"],"names":["React","useState","useEffect","Table","Form","Alert","Todos","data","setData","show","setShow","getTodos","response","fetch","then","json","toggleSwitch","key","map","item","id","title","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC,CAHgB,CAIhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,QAAf,GAA0B;AACtB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyDF,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAArE,CAAvB,CAFsB,CAGtB;;AACAP,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KANW,CAOZ;;;AACAD,IAAAA,QAAQ;AACX,GATQ,EASN,EATM,CAAT;;AAWA,QAAMK,YAAY,GAAIC,GAAD,IAAS;AAC1B;AAAA,YAAC,KAAD;AAAiB,MAAA,OAAO,EAAE,SAA1B;AAAqC,MAAA,OAAO,EAAE,MAAMP,OAAO,CAAC,KAAD,CAA3D;AAAoE,MAAA,WAAW,MAA/E;AAAA;AAAA,OAAYO,GAAZ;AAAA;AAAA;AAAA;AAAA;AAGH,GAJD;;AAKA,sBACI;AAAA,2BACA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACI;AAAA,+BACI;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACIV,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAOF,GAAP,kBACL;AAAA,kCACA;AAAA,sBAAKE,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA,sBACKF,IAAI,CAACG,SAAL,KAAmB,KAAnB,gBACG,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,EAAE,EAAC,eAFP;AAGI,cAAA,OAAO,EAAE,KAHb;AAII,cAAA,QAAQ,EAAE,MAAMN,YAAY;AAJhC;AAAA;AAAA;AAAA;AAAA,oBADH,gBAQG,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,EAAE,EAAC,eAFP;AAGI,cAAA,OAAO,EAAE,IAHb;AAII,cAAA,QAAQ,EAAE,MAAMA,YAAY,CAACC,GAAD;AAJhC;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAuCH,CA5DD;;GAAMX,K;;KAAAA,K;AA6DN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nconst Todos = () => {\n    // Iniciando estado com array vazio.\n    const [data, setData] = useState([]);\n    const [show, setShow] = useState(false)\n    // Sempre que o componente carregar, executar a função dentro do useEffect.\n    useEffect(() => {\n        async function getTodos() {\n            // Montando requisição\n            const response = await fetch('https://jsonplaceholder.typicode.com/todos').then(response => response.json())\n            // Setando o estado data com os valores retornados pela requisição\n            setData(response)\n        }\n        // Chamando função.\n        getTodos();\n    }, [])\n\n    const toggleSwitch = (key) => {\n        <Alert key={key} variant={'warning'} onClose={() => setShow(false)} dismissible>>\n            Você não pode alterar isso ainda.\n        </Alert>\n    }\n    return(\n        <>\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                <th>ID</th>\n                <th>Titulo</th>\n                <th>Completo</th>\n                </tr>\n            </thead>\n            <tbody>\n               {data.map((item, key) => (\n                    <tr key={key}>\n                    <td>{item.id}</td>\n                    <td>{item.title}</td>\n                    <td>\n                        {item.completed === false ? (\n                            <Form.Check \n                                type=\"switch\"\n                                id=\"custom-switch\"\n                                checked={false}\n                                onChange={() => toggleSwitch()}\n                            />\n                        ):(\n                            <Form.Check \n                                type=\"switch\"\n                                id=\"custom-switch\"\n                                checked={true}\n                                onChange={() => toggleSwitch(key)}\n                            />\n                        )}\n                   </td>\n                  \n                    </tr>\n               ))}\n            </tbody>\n        </Table>\n        </>\n    )\n}\nexport default Todos;"]},"metadata":{},"sourceType":"module"}