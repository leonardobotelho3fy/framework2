{"ast":null,"code":"var _jsxFileName = \"/var/www/html/project/framework/src/components/Todos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todos = () => {\n  _s();\n\n  // Iniciando estado com array vazio.\n  const [data, setData] = useState([]);\n  console.log(data); // Sempre que o componente carregar, executar a função dentro do useEffect.\n\n  useEffect(() => {\n    async function getTodos() {\n      // Montando requisição\n      const response = await fetch('https://jsonplaceholder.typicode.com/todos').then(response => response.json()); // Setando o estado data com os valores retornados pela requisição\n\n      setData(response);\n    } // Chamando função.\n\n\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Titulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.completed == false ? 'Não completo' : 'Completo'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"custom-switch\",\n              value: true,\n              defaultValue: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todos, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/var/www/html/project/framework/src/components/Todos.jsx"],"names":["React","useState","useEffect","Table","Form","Todos","data","setData","console","log","getTodos","response","fetch","then","json","map","item","id","title","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHgB,CAIhB;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,QAAf,GAA0B;AACtB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyDF,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAArE,CAAvB,CAFsB,CAGtB;;AACAP,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KANW,CAOZ;;;AACAD,IAAAA,QAAQ;AACX,GATQ,EASN,EATM,CAAT;AAYA,sBACI;AAAA,2BACA,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACI;AAAA,+BACI;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACIJ,IAAI,CAACS,GAAL,CAAUC,IAAD,iBACL;AAAA,kCACA;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA,sBAAKF,IAAI,CAACG,SAAL,IAAkB,KAAlB,GAA0B,cAA1B,GAA2C;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,EAAE,EAAC,eAFP;AAGI,cAAA,KAAK,EAAE,IAHX;AAII,cAAA,YAAY,EAAE;AAJlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA8BH,CA/CD;;GAAMd,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\n\nconst Todos = () => {\n    // Iniciando estado com array vazio.\n    const [data, setData] = useState([]);\n    console.log(data)\n    // Sempre que o componente carregar, executar a função dentro do useEffect.\n    useEffect(() => {\n        async function getTodos() {\n            // Montando requisição\n            const response = await fetch('https://jsonplaceholder.typicode.com/todos').then(response => response.json())\n            // Setando o estado data com os valores retornados pela requisição\n            setData(response)\n        }\n        // Chamando função.\n        getTodos();\n    }, [])\n\n    \n    return(\n        <>\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                <th>ID</th>\n                <th>Titulo</th>\n                <th>Completo</th>\n                </tr>\n            </thead>\n            <tbody>\n               {data.map((item) => (\n                    <tr>\n                    <td>{item.id}</td>\n                    <td>{item.title}</td>\n                    <td>{item.completed == false ? 'Não completo' : 'Completo'}</td>\n                    <td>\n                        <Form.Check \n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            value={true}\n                            defaultValue={true}\n                        />\n                    </td>\n                    </tr>\n               ))}\n            </tbody>\n        </Table>\n        </>\n    )\n}\nexport default Todos;"]},"metadata":{},"sourceType":"module"}