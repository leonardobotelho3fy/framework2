{"ast":null,"code":"var _jsxFileName = \"/var/www/html/project/framework/src/components/Menu/Menu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport styles from './menu.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Menu = () => {\n  _s();\n\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      className: styles.navbar,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `${styles.icon} fa fa-bars`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), values.map((v, idx) => /*#__PURE__*/_jsxDEV(Button, {\n      className: \"me-2\",\n      onClick: () => handleShow(v),\n      children: [\"Full screen\", typeof v === 'string' && `below ${v.split('-')[0]}`]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Modal body content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Menu, \"r1BdtmaL5kfnF9ZWQx7Jab+0RYs=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/var/www/html/project/framework/src/components/Menu/Menu.jsx"],"names":["React","useEffect","useState","Navbar","Container","Button","Modal","styles","Menu","fullscreen","setFullscreen","show","setShow","navbar","icon","values","map","v","idx","handleShow","split"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACA,sBACA;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEK,MAAM,CAACM,MAA1B;AAAA,6BACA,QAAC,SAAD;AAAA,gCACI,QAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD,CAAQ,QAAR;AAAiB,UAAA,SAAS,EAAC,qBAA3B;AAAA,iCACA,QAAC,MAAD,CAAQ,IAAR;AAAA,mCACI;AAAG,cAAA,SAAS,EAAG,GAAEN,MAAM,CAACO,IAAK;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,EAYKC,MAAM,CAACC,GAAP,CAAW,CAACC,CAAD,EAAIC,GAAJ,kBACZ,QAAC,MAAD;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACF,CAAD,CAA5D;AAAA,gCAEG,OAAOA,CAAP,KAAa,QAAb,IAA0B,SAAQA,CAAC,CAACG,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAgB,EAFrD;AAAA,OAAaF,GAAb;AAAA;AAAA;AAAA;AAAA,YADC,CAZL,eAkBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEP,IAAb;AAAmB,MAAA,UAAU,EAAEF,UAA/B;AAA2C,MAAA,MAAM,EAAE,MAAMG,OAAO,CAAC,KAAD,CAAhE;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADA;AA2BH,CA9BD;;GAAMJ,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport styles from './menu.module.css';\nconst Menu = () => {\n    const [fullscreen, setFullscreen] = useState(true);\n    const [show, setShow] = useState(false);\n    return(\n    <>\n        <Navbar className={styles.navbar}>\n        <Container>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text>\n                <i className={`${styles.icon} fa fa-bars`}></i>\n            </Navbar.Text>\n            </Navbar.Collapse>\n        </Container>\n        </Navbar>\n\n        {values.map((v, idx) => (\n        <Button key={idx} className=\"me-2\" onClick={() => handleShow(v)}>\n          Full screen\n          {typeof v === 'string' && `below ${v.split('-')[0]}`}\n        </Button>\n      ))}\n      <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Modal body content</Modal.Body>\n      </Modal>\n    </>\n    )\n}\nexport default Menu;"]},"metadata":{},"sourceType":"module"}