{"ast":null,"code":"var _jsxFileName = \"/var/www/html/project/framework/src/components/Modal/ModalMenu.jsx\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalMenu = ({\n  show,\n  fullscreen,\n  setShow\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Modal body content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ModalMenu;\nexport default ModalMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalMenu\");","map":{"version":3,"sources":["/var/www/html/project/framework/src/components/Modal/ModalMenu.jsx"],"names":["React","Modal","ModalMenu","show","fullscreen","setShow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA;AAAnB,CAAD,KAAiC;AAC/C,sBACA;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAmB,MAAA,UAAU,EAAEC,UAA/B;AAA2C,MAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,KAAD,CAAhE;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADA;AAUH,CAXD;;KAAMH,S;AAYN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\n\nconst ModalMenu = ({show, fullscreen, setShow}) => {\n    return(\n    <>\n      <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          \n        </Modal.Header>\n        <Modal.Body>Modal body content</Modal.Body>\n      </Modal>\n    </>\n    )\n}\nexport default ModalMenu;"]},"metadata":{},"sourceType":"module"}